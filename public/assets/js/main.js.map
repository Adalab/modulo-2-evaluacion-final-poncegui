{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n\n// ****************************************************************************\n// Preguntas SOPORTE;\n// PORQUÉ NO FUNCIONA SIN HTTP\n  //Cómo añadir la url de la imagen al objeto creadoo; la coge pero no la muestra\n  \n  \n  // ****************************************************************************\n    // Pendientes;\n    // Crear mensaje por si no encuentra la series\n    // Añadir replace a las búsquedas sin imagenes\n\n\n//GLOBAL VARIABLES\nconst input = document.querySelector(\".js_inputUser\");\nconst btnSearch = document.querySelector(\".js_btnSearch\");\nconst btnReset = document.querySelector(\".js_btnReset\");\nconst btnRemoveFav = document.querySelectorAll(\".js-remove\");\n\n\n//VARIABLES USED TO RENDER DOM WITH FRAGMENT \nconst templateFavorites = document.getElementById(\"template-favorites\").content\nconst templateCard = document.getElementById(\"template-card\").content\nconst fragmentList = document.createDocumentFragment()\nconst listMovies =document.querySelector(\".js_results\");\nconst listFav =document.querySelector(\".js_favorites\");\n\n\n\n//ARRAYS\nlet tvSerieslist = [];\nlet fav = [];\n\n\n\n//FETCH PART #1\n\nfunction handleSearch(ev){\n    ev.preventDefault();\n    let inputUser = input.value;\n\n    fetch(`https://api.jikan.moe/v3/search/anime?q=`+ inputUser)\n    .then(response => response.json())\n    .then((moviesData) => {\n        tvSerieslist = moviesData.results\n        renderAnimeTvShows();\n         \n\n    })\n\n\n}  \n\n//RENDER PART #2  *inyect search user results & clear list\n\nfunction renderAnimeTvShows(){\n    tvSerieslist.forEach(choice => {\n        templateCard.querySelector(\"h5\").textContent = choice.title\n        templateCard.querySelector(\"img\").setAttribute(\"src\", choice.image_url)\n        templateCard.querySelector(\".js-favorite\").dataset.id = choice.mal_id\n\n        const clone = templateCard.cloneNode(true)\n        fragmentList.appendChild(clone)\n    })\n\n    listMovies.appendChild(fragmentList)\n    console.log(fragmentList)\n\n\n    //Clear search user\n    btnReset.addEventListener(\"click\", (ev) => {\n        ev.preventDefault\n        listMovies.innerHTML=\"\";\n    \n    })\n  \n}\n\n\n//RENDER PART #3   *create a favorite list\n\n// ***Looking for btn selected***\n\nconst favorite = ev => {\n    if(ev.target.classList.contains(\"js-favorite\")){\n    setFavorite(ev.target.parentElement)}\n    ev.stopPropagation()\n}\n\n\n// ***Need create a new object with \"id\" and add it to favorite list***\nconst setFavorite = newObject => {\n    const movieFav = {\n        id: newObject.querySelector(\".js-favorite\").dataset.id,\n        title: newObject.querySelector(\"h5\").textContent,\n        image_url: newObject.querySelector(\"img\").src,\n        \n    }\n\n// ***New objet is pushed into \"fav\"\n    fav[movieFav] = {...movieFav}\n    renderFav()\n  \n}\n\n\n// ***Render new objet into fav list\n\nconst renderFav = () => {\n\n    // console.log(fav);\n    // console.dir(fav);\n    Object.values(fav).forEach(movieFav => {\n        templateFavorites.querySelector(\"h5\").textContent = movieFav.title\n\n        const clone2 = templateFavorites.cloneNode(true)\n        fragmentList.appendChild(clone2)\n    })\n\n    listFav.appendChild(fragmentList)\n    console.log(listFav)\n   \n    // btnRemoveFav.addEventListener(\"click\", () => {\n    //     listFav.innerHTML=\"\";\n    \n    // })\n\n     \n}\n\n //Clear fav movie selected\n\n\n//LISTENERS\n\nbtnSearch.addEventListener(\"click\", handleSearch);\nlistMovies.addEventListener(\"click\", ev => {\n    favorite(ev)\n   })"]}