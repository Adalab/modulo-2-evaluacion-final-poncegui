{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n// const { series } = require(\"gulp\");\n\n// ****************************************************************************\n// Preguntas SOPORTE;\n// PORQUÉ NO FUNCIONA SIN HTTP\n  // image: newObject.querySelector(\"img\")\n  //Cómo añadir la url de la imagen al objeto creadoo; la coge pero no la mete en scr  :( \n  // ****************************************************************************\n    // Pendientes;\n    // Crear funcion por si no encuentra la series\n    // Añadir replace a las búsquedas sin imagenes\n\n\n//VARIABLES\nconst input = document.querySelector(\".js_inputUser\");\nconst btnSearch = document.querySelector(\".js_btnSearch\");\nconst btnReset = document.querySelector(\".js_reset\");\n\n\n//VARIABLES TO RENDER DOM \nconst templateFavorites = document.getElementById(\"template-favorites\").content\nconst templateCard = document.getElementById(\"template-card\").content\nconst fragmentList = document.createDocumentFragment()\nconst listMovies =document.querySelector(\".js_results\");\nconst listFav =document.querySelector(\".js_favorites\");\n\n\n//ARRAYS\nlet tvSerieslist= [];\nlet fav=[];\n\n\n\n//FETCH\n// PREGUNTAR EN TUTORIA PORQUÉ NO FUNCIONA SIN HTTP\nfunction handleSearch(ev){\n    ev.preventDefault();\n    let inputUser = input.value;\n\n    fetch(`https://api.jikan.moe/v3/search/anime?q=`+ inputUser)\n    .then(response => response.json())\n    .then((moviesData) => {\n        tvSerieslist = moviesData.results\n        // console.log(tvSerieslist)\n        renderAnimeTvShows();\n         \n\n    })\n\n\n}  \n\n//RENDER \n// NO OLVIDAR PONER REPLACE EN LAS FOTOS CON https://via.placeholder.com/210x295/ffffff/666666/?text=TV\n\n\nfunction renderAnimeTvShows(){\n    tvSerieslist.forEach(choice => {\n        console.log(choice);\n        templateCard.querySelector(\"h5\").textContent = choice.title\n        templateCard.querySelector(\"img\").setAttribute(\"src\", choice.image_url)\n        templateCard.querySelector(\".js-favorite\").dataset.id = choice.mal_id\n        const clone = templateCard.cloneNode(true)\n        fragmentList.appendChild(clone)\n    })\n\n    listMovies.appendChild(fragmentList)\n    // console.log(fragmentList)\n}\n\n//ADD TO FAVORITES LIST\n// ***Looking for btn selected***\n\n\n\nconst favorite = ev => {\n    console.log(ev.target);\n    // console.log(ev.target.classList.contains(\"js-favorite\"))\n    if(ev.target.classList.contains(\"js-favorite\")){\n// console.log(ev.target.parentElement);}\n    setFavorite(ev.target.parentElement)}\n    ev.stopPropagation();\n}\n\n\n// ***Need create a new object with id***\nconst setFavorite = newObject =>{\n    // console.log(newObject);\n    const movieFav = {\n        id: newObject.querySelector(\".js-favorite\").dataset.id,\n        title: newObject.querySelector(\"h5\").textContent,\n        // image_url: newObject.querySelector(\"img\").setAttribute(\"src\", choice.image_url),\n        // image: newObject.querySelector(\"img\")\n        // PREGUNTAR EN TUTORIA COMO AÑADIR LA IMAGEN \n    \n    }\n\n   \n\n    fav[movieFav] = {...movieFav}\n    console.log(movieFav);\n    renderFav()\n  \n}\n\n\n//RENDER FAVORITES\n\nconst renderFav= () =>{\n    console.log(fav);\n    Object.values(fav).forEach(movieFav => {\n        // templateFavorites.querySelector(\"h5\").textContent = movieFav.title\n        templateFavorites.querySelector(\"h5\").textContent = movieFav.title\n        const clone = templateFavorites.cloneNode(true)\n        fragmentList.appendChild(clone)\n    })\n\n    listFav.appendChild(fragmentList)\n}\n\n\n\n//LISTENERS\n\nbtnSearch.addEventListener(\"click\", handleSearch);\nlistMovies.addEventListener(\"click\", ev => {\n    favorite(ev)\n   })"]}